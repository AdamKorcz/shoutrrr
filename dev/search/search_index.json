{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shoutrrr \u00b6 Notification library for gophers and their furry friends. Heavily inspired by caronc/apprise . To make it easy and streamlined to consume shoutrrr regardless of the notification service you want to use, we've implemented a notification service url schema. To send notifications, instantiate the ShoutrrrClient using one of the service urls from the overview .","title":"Home"},{"location":"#shoutrrr","text":"Notification library for gophers and their furry friends. Heavily inspired by caronc/apprise . To make it easy and streamlined to consume shoutrrr regardless of the notification service you want to use, we've implemented a notification service url schema. To send notifications, instantiate the ShoutrrrClient using one of the service urls from the overview .","title":"Shoutrrr"},{"location":"getting-started/","text":"Getting started \u00b6 As a package \u00b6 Using shoutrrr is easy! There is currently two ways of using it as a package. Using the direct send command \u00b6 Easiest to use, but very limited. url := \"slack://token-a/token-b/token-c\" err := shoutrrr . Send ( url , \"Hello world (or slack channel) !\" ) Using a sender \u00b6 Using a sender gives you the ability to preconfigure multiple notification services and send to all of them with the same Send(message, params) method. urlA := \"slack://token-a/token-b/token-c\" urlB := \"telegram://110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw@telegram?channels=@mychannel\" sender , err := shoutrrr . CreateSender ( urlA , urlB ) // Send notifications instantly to all services sender . Send ( \"Hello world (or slack/telegram channel)!\" , map [ string ] string { \"title\" : \"He-hey~!\" }) // ...or bundle notifications... func doWork () error { // ...and send them when leaving the scope defer sender . Flush ( map [ string ] string { \"title\" : \"Work Result\" }) sender . Enqueue ( \"Started doing %v\" , stuff ) // Maybe get creative...? defer func ( start time . Time ) { sender . Enqueue ( \"Elapsed: %v\" , time . Now (). Sub ( start )) }( time . Now ()) if err := doMoreWork (); err != nil { sender . Enqueue ( \"Oh no! %v\" , err ) // This will send the currently queued up messages... return } sender . Enqueue ( \"Everything went very well!\" ) // ...or this: } Through the CLI \u00b6 Start by running the build.sh script. You may then run the shoutrrr executable: $ ./shoutrrr Usage: ./shoutrrr <ActionVerb> [ ... ] Possible actions: send, verify, generate Commands \u00b6 Send \u00b6 Send a notification using the supplied notification service url. $ shoutrrr send \\ --url \"<SERVICE_URL>\" \\ --message \"<MESSAGE BODY>\" Verify \u00b6 Verify the validity of a notification service url. $ shoutrrr verify \\ --url \"<SERVICE_URL>\" Generate \u00b6 Generate and display the configuration for a notification service url. $ shoutrrr generate [ OPTIONS ] <SERVICE> Flags Description -g, --generator string The generator to use (default \"basic\") -p, --property stringArray Configuration property in key=value format -s, --service string The notification service to generate a URL for Note : Service can either be supplied as the first argument or using the -s flag. For more information on generators, see Generators . Options \u00b6 Debug \u00b6 Enables debug output from the CLI. Flags Env. Default Required --debug , -d SHOUTRRR_DEBUG false URL \u00b6 The target url for the notifications generated, see overview . Flags Env. Default Required --url , -u SHOUTRRR_URL N/A \u2705 From a GitHub Actions workflow \u00b6 You can also use Shoutrrr from a GitHub Actions workflow. See this example and the action on GitHub Marketplace : name : Deploy on : push : branches : - main jobs : build : runs-on : ubuntu-latest steps : - name : Some other steps needed for deploying run : ... - name : Shoutrrr uses : containrrr/shoutrrr-action@v1 with : url : ${{ secrets.SHOUTRRR_URL }} title : Deployed ${{ github.sha }} message : See changes at ${{ github.event.compare }}.","title":"Getting started"},{"location":"getting-started/#getting_started","text":"","title":"Getting started"},{"location":"getting-started/#as_a_package","text":"Using shoutrrr is easy! There is currently two ways of using it as a package.","title":"As a package"},{"location":"getting-started/#using_the_direct_send_command","text":"Easiest to use, but very limited. url := \"slack://token-a/token-b/token-c\" err := shoutrrr . Send ( url , \"Hello world (or slack channel) !\" )","title":"Using the direct send command"},{"location":"getting-started/#using_a_sender","text":"Using a sender gives you the ability to preconfigure multiple notification services and send to all of them with the same Send(message, params) method. urlA := \"slack://token-a/token-b/token-c\" urlB := \"telegram://110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw@telegram?channels=@mychannel\" sender , err := shoutrrr . CreateSender ( urlA , urlB ) // Send notifications instantly to all services sender . Send ( \"Hello world (or slack/telegram channel)!\" , map [ string ] string { \"title\" : \"He-hey~!\" }) // ...or bundle notifications... func doWork () error { // ...and send them when leaving the scope defer sender . Flush ( map [ string ] string { \"title\" : \"Work Result\" }) sender . Enqueue ( \"Started doing %v\" , stuff ) // Maybe get creative...? defer func ( start time . Time ) { sender . Enqueue ( \"Elapsed: %v\" , time . Now (). Sub ( start )) }( time . Now ()) if err := doMoreWork (); err != nil { sender . Enqueue ( \"Oh no! %v\" , err ) // This will send the currently queued up messages... return } sender . Enqueue ( \"Everything went very well!\" ) // ...or this: }","title":"Using a sender"},{"location":"getting-started/#through_the_cli","text":"Start by running the build.sh script. You may then run the shoutrrr executable: $ ./shoutrrr Usage: ./shoutrrr <ActionVerb> [ ... ] Possible actions: send, verify, generate","title":"Through the CLI"},{"location":"getting-started/#commands","text":"","title":"Commands"},{"location":"getting-started/#send","text":"Send a notification using the supplied notification service url. $ shoutrrr send \\ --url \"<SERVICE_URL>\" \\ --message \"<MESSAGE BODY>\"","title":"Send"},{"location":"getting-started/#verify","text":"Verify the validity of a notification service url. $ shoutrrr verify \\ --url \"<SERVICE_URL>\"","title":"Verify"},{"location":"getting-started/#generate","text":"Generate and display the configuration for a notification service url. $ shoutrrr generate [ OPTIONS ] <SERVICE> Flags Description -g, --generator string The generator to use (default \"basic\") -p, --property stringArray Configuration property in key=value format -s, --service string The notification service to generate a URL for Note : Service can either be supplied as the first argument or using the -s flag. For more information on generators, see Generators .","title":"Generate"},{"location":"getting-started/#options","text":"","title":"Options"},{"location":"getting-started/#debug","text":"Enables debug output from the CLI. Flags Env. Default Required --debug , -d SHOUTRRR_DEBUG false","title":"Debug"},{"location":"getting-started/#url","text":"The target url for the notifications generated, see overview . Flags Env. Default Required --url , -u SHOUTRRR_URL N/A \u2705","title":"URL"},{"location":"getting-started/#from_a_github_actions_workflow","text":"You can also use Shoutrrr from a GitHub Actions workflow. See this example and the action on GitHub Marketplace : name : Deploy on : push : branches : - main jobs : build : runs-on : ubuntu-latest steps : - name : Some other steps needed for deploying run : ... - name : Shoutrrr uses : containrrr/shoutrrr-action@v1 with : url : ${{ secrets.SHOUTRRR_URL }} title : Deployed ${{ github.sha }} message : See changes at ${{ github.event.compare }}.","title":"From a GitHub Actions workflow"},{"location":"proxy/","text":"To use a proxy with shoutrrr, you could either set the proxy URL in the environment variable HTTP_PROXY or override the default HTTP client like this: proxyurl , err := url . Parse ( \"socks5://localhost:1337\" ) if err != nil { log . Fatalf ( \"Error parsing proxy URL: %q\" , err ) } http . DefaultClient . Transport = & http . Transport { Proxy : http . ProxyURL ( proxyurl ), DialContext : ( & net . Dialer { Timeout : 30 * time . Second , KeepAlive : 30 * time . Second , }). DialContext , ForceAttemptHTTP2 : true , MaxIdleConns : 100 , IdleConnTimeout : 90 * time . Second , TLSHandshakeTimeout : 10 * time . Second , ExpectContinueTimeout : 1 * time . Second , }","title":"Proxy"},{"location":"generators/basic/","text":"Basic generator \u00b6 The basic generator looks at the key:\"\" , desc:\"\" and default:\"\" tags on service configuration structs and uses them to ask the user to fill in their corresponding values. Example: $ shoutrrr generate telegram Generating URL for telegram using basic generator Enter the configuration values as prompted Token : 110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw Preview[Yes] : No Notification[Yes] : ParseMode[None] : Channels : @ mychannel URL : telegram://110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw@telegram?channels=@mychannel&notification=Yes&parsemode=None&preview=No","title":"Basic generator"},{"location":"generators/basic/#basic_generator","text":"The basic generator looks at the key:\"\" , desc:\"\" and default:\"\" tags on service configuration structs and uses them to ask the user to fill in their corresponding values. Example: $ shoutrrr generate telegram Generating URL for telegram using basic generator Enter the configuration values as prompted Token : 110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw Preview[Yes] : No Notification[Yes] : ParseMode[None] : Channels : @ mychannel URL : telegram://110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw@telegram?channels=@mychannel&notification=Yes&parsemode=None&preview=No","title":"Basic generator"},{"location":"generators/overview/","text":"Generators \u00b6 Generators are used to create service configurations via the command line. The main generator is the reflection based Basic generator that aims to be able to generator configurations for all the core services via a set of simple questions. Usage \u00b6 $ shoutrrr generate [ OPTIONS ] -g <GENERATOR> <SERVICE>","title":"Generators"},{"location":"generators/overview/#generators","text":"Generators are used to create service configurations via the command line. The main generator is the reflection based Basic generator that aims to be able to generator configurations for all the core services via a set of simple questions.","title":"Generators"},{"location":"generators/overview/#usage","text":"$ shoutrrr generate [ OPTIONS ] -g <GENERATOR> <SERVICE>","title":"Usage"},{"location":"guides/slack/","text":"Slack Guides \u00b6 Guides for setting up the Slack service Getting a token \u00b6 To enable all features, either the Legacy Webhook- (deprecated and might stop working) or the bot API tokens needs to be used. Only use the non-legacy Webhook if you don't need to customize the bot name or icon. Bot API (preferred) \u00b6 Create a new App for your bot using the Basic app setup guide Install the App into your workspace ( slack docs ). From Apps , select your new App and go to Oauth & Permissions Copy the Bot User OAuth Token Example Given the API token xoxb - 123456789012 - 1234567890123 - 4mt0t4l1YL3g1T5L4cK70k3N and the channel ID C001CH4NN3L (obtained by using the guide below ), the Shoutrrr URL should look like this: slack:// xoxb : 123456789012 - 1234567890123 - 4mt0t4l1YL3g1T5L4cK70k3N @ C001CH4NN3L Webhook tokens \u00b6 Get a Webhook URL using the legacy WebHooks Integration , or by using the Getting started with Incoming Webhooks guide and replace the initial https://hooks.slack.com/services/ part of the webhook URL with slack://hook: to get your Shoutrrr URL. Slack Webhook URL https://hooks.slack.com/services/ T00000000 / B00000000 / XXXXXXXXXXXXXXXXXXXXXXXX Shoutrrr URL slack://hook: T00000000 - B00000000 - XXXXXXXXXXXXXXXXXXXXXXXX @webhook Getting the Channel ID \u00b6 Only needed for API token. Use webhook as the channel for webhook tokens. In the channel you wish to post to, open Channel Details by clicking on the channel title. Copy the Channel ID from the bottom of the popup and append it to your Shoutrrr URL","title":"Slack"},{"location":"guides/slack/#slack_guides","text":"Guides for setting up the Slack service","title":"Slack Guides"},{"location":"guides/slack/#getting_a_token","text":"To enable all features, either the Legacy Webhook- (deprecated and might stop working) or the bot API tokens needs to be used. Only use the non-legacy Webhook if you don't need to customize the bot name or icon.","title":"Getting a token"},{"location":"guides/slack/#bot_api_preferred","text":"Create a new App for your bot using the Basic app setup guide Install the App into your workspace ( slack docs ). From Apps , select your new App and go to Oauth & Permissions Copy the Bot User OAuth Token Example Given the API token xoxb - 123456789012 - 1234567890123 - 4mt0t4l1YL3g1T5L4cK70k3N and the channel ID C001CH4NN3L (obtained by using the guide below ), the Shoutrrr URL should look like this: slack:// xoxb : 123456789012 - 1234567890123 - 4mt0t4l1YL3g1T5L4cK70k3N @ C001CH4NN3L","title":"Bot API (preferred)"},{"location":"guides/slack/#webhook_tokens","text":"Get a Webhook URL using the legacy WebHooks Integration , or by using the Getting started with Incoming Webhooks guide and replace the initial https://hooks.slack.com/services/ part of the webhook URL with slack://hook: to get your Shoutrrr URL. Slack Webhook URL https://hooks.slack.com/services/ T00000000 / B00000000 / XXXXXXXXXXXXXXXXXXXXXXXX Shoutrrr URL slack://hook: T00000000 - B00000000 - XXXXXXXXXXXXXXXXXXXXXXXX @webhook","title":"Webhook tokens"},{"location":"guides/slack/#getting_the_channel_id","text":"Only needed for API token. Use webhook as the channel for webhook tokens. In the channel you wish to post to, open Channel Details by clicking on the channel title. Copy the Channel ID from the bottom of the popup and append it to your Shoutrrr URL","title":"Getting the Channel ID"},{"location":"services/discord/","text":"Discord \u00b6 URL Format \u00b6 Your Discord Webhook-URL will look like this: https://discordapp.com/api/webhooks/ webhookid / token The shoutrrr service URL should look like this: discord:// token @ webhookid URL Fields \u00b6 Token ( Required ) URL part: discord:// token @webhookid/ WebhookID ( Required ) URL part: discord://token@ webhookid / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Avatar - Override the webhook default avatar with specified URL Default: empty Aliases: avatarurl Color - The color of the left border for plain messages Default: 0x50D9ff ColorDebug - The color of the left border for debug messages Default: 0x7b00ab ColorError - The color of the left border for error messages Default: 0xd60510 ColorInfo - The color of the left border for info messages Default: 0x2488ff ColorWarn - The color of the left border for warning messages Default: 0xffc441 JSON - Whether to send the whole message as the JSON payload instead of using it as the 'content' field Default: \u274c No SplitLines - Whether to send each line as a separate embedded item Default: \u2714 Yes Title Default: empty Username - Override the webhook default username Default: empty Creating a webhook in Discord \u00b6 Open your server settings by first clicking on the name of the server. Then click on Server Settings . In the menu on the left, click on Webhooks . In the top right corner, click on Create Webhook . Set name, channel and icon to your liking and copy the Webhook URL on the bottom. Then click save. Format the service URL https://discordapp.com/api/webhooks/693853386302554172/W3dE2OZz4C13_4z_uHfDOoC7BqTW288s-z1ykqI0iJnY_HjRqMGO8Sc7YDqvf_KVKjhJ \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 webhook id token discord://W3dE2OZz4C13_4z_uHfDOoC7BqTW288s-z1ykqI0iJnY_HjRqMGO8Sc7YDqvf_KVKjhJ@693853386302554172 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token webhook id","title":"Discord"},{"location":"services/discord/#discord","text":"","title":"Discord"},{"location":"services/discord/#url_format","text":"Your Discord Webhook-URL will look like this: https://discordapp.com/api/webhooks/ webhookid / token The shoutrrr service URL should look like this: discord:// token @ webhookid","title":"URL Format"},{"location":"services/discord/#url_fields","text":"Token ( Required ) URL part: discord:// token @webhookid/ WebhookID ( Required ) URL part: discord://token@ webhookid /","title":"URL Fields"},{"location":"services/discord/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Avatar - Override the webhook default avatar with specified URL Default: empty Aliases: avatarurl Color - The color of the left border for plain messages Default: 0x50D9ff ColorDebug - The color of the left border for debug messages Default: 0x7b00ab ColorError - The color of the left border for error messages Default: 0xd60510 ColorInfo - The color of the left border for info messages Default: 0x2488ff ColorWarn - The color of the left border for warning messages Default: 0xffc441 JSON - Whether to send the whole message as the JSON payload instead of using it as the 'content' field Default: \u274c No SplitLines - Whether to send each line as a separate embedded item Default: \u2714 Yes Title Default: empty Username - Override the webhook default username Default: empty","title":"Query/Param Props"},{"location":"services/discord/#creating_a_webhook_in_discord","text":"Open your server settings by first clicking on the name of the server. Then click on Server Settings . In the menu on the left, click on Webhooks . In the top right corner, click on Create Webhook . Set name, channel and icon to your liking and copy the Webhook URL on the bottom. Then click save. Format the service URL https://discordapp.com/api/webhooks/693853386302554172/W3dE2OZz4C13_4z_uHfDOoC7BqTW288s-z1ykqI0iJnY_HjRqMGO8Sc7YDqvf_KVKjhJ \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 webhook id token discord://W3dE2OZz4C13_4z_uHfDOoC7BqTW288s-z1ykqI0iJnY_HjRqMGO8Sc7YDqvf_KVKjhJ@693853386302554172 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token webhook id","title":"Creating a webhook in Discord"},{"location":"services/email/","text":"Email \u00b6 URL Format \u00b6 smtp:// username : password @ host : port /?from= fromAddress &to= recipient1 [, recipient2 ,...] URL Fields \u00b6 Username - SMTP server username Default: empty URL part: smtp:// username :password@host:port/ Password - SMTP server password or hash (for OAuth2) Default: empty URL part: smtp://username: password @host:port/ Host - SMTP server hostname or IP address ( Required ) URL part: smtp://username:password@ host :port/ Port - SMTP server port, common ones are 25, 465, 587 or 2525 Default: 25 URL part: smtp://username:password@host: port / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. FromAddress - E-mail address that the mail are sent from ( Required ) Aliases: from ToAddresses - List of recipient e-mails separated by \",\" (comma) ( Required ) Aliases: to Auth - SMTP authentication method Default: Unknown Possible values: None , Plain , CRAMMD5 , Unknown , OAuth2 Encryption - Encryption method Default: Auto Possible values: None , ExplicitTLS , ImplicitTLS , Auto FromName - Name of the sender Default: empty Subject - The subject of the sent mail Default: Shoutrrr Notification Aliases: title UseHTML - Whether the message being sent is in HTML Default: \u274c No UseStartTLS - Whether to use StartTLS encryption Default: \u2714 Yes","title":"Email"},{"location":"services/email/#email","text":"","title":"Email"},{"location":"services/email/#url_format","text":"smtp:// username : password @ host : port /?from= fromAddress &to= recipient1 [, recipient2 ,...]","title":"URL Format"},{"location":"services/email/#url_fields","text":"Username - SMTP server username Default: empty URL part: smtp:// username :password@host:port/ Password - SMTP server password or hash (for OAuth2) Default: empty URL part: smtp://username: password @host:port/ Host - SMTP server hostname or IP address ( Required ) URL part: smtp://username:password@ host :port/ Port - SMTP server port, common ones are 25, 465, 587 or 2525 Default: 25 URL part: smtp://username:password@host: port /","title":"URL Fields"},{"location":"services/email/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. FromAddress - E-mail address that the mail are sent from ( Required ) Aliases: from ToAddresses - List of recipient e-mails separated by \",\" (comma) ( Required ) Aliases: to Auth - SMTP authentication method Default: Unknown Possible values: None , Plain , CRAMMD5 , Unknown , OAuth2 Encryption - Encryption method Default: Auto Possible values: None , ExplicitTLS , ImplicitTLS , Auto FromName - Name of the sender Default: empty Subject - The subject of the sent mail Default: Shoutrrr Notification Aliases: title UseHTML - Whether the message being sent is in HTML Default: \u274c No UseStartTLS - Whether to use StartTLS encryption Default: \u2714 Yes","title":"Query/Param Props"},{"location":"services/generic/","text":"Generic \u00b6 URL Format \u00b6 URL Fields \u00b6 Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. ContentType - The value of the Content-Type header Default: application/json DisableTLS Default: \u274c No Template Default: empty Title Default: empty","title":"Generic Webhook"},{"location":"services/generic/#generic","text":"","title":"Generic"},{"location":"services/generic/#url_format","text":"","title":"URL Format"},{"location":"services/generic/#url_fields","text":"","title":"URL Fields"},{"location":"services/generic/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. ContentType - The value of the Content-Type header Default: application/json DisableTLS Default: \u274c No Template Default: empty Title Default: empty","title":"Query/Param Props"},{"location":"services/googlechat/","text":"Google Chat \u00b6 URL Format \u00b6 Your Google Chat Incoming Webhook URL will look like this: https://chat.googleapis.com/v1/spaces/ FOO /messages?key= bar &token= baz The shoutrrr service URL should look like this: googlechat://chat.googleapis.com/v1/spaces/ FOO /messages?key= bar &token= baz In other words the incoming webhook URL with https replaced by googlechat . Google Chat was previously known as Hangouts Chat. Using hangouts in the service URL instead googlechat is still supported, although deprecated. Creating an incoming webhook in Google Chat \u00b6 Open the room you would like to add Shoutrrr to and open the chat room menu. Then click on Configure webhooks . Name the webhook and save. Copy the URL. Format the service URL by replacing https with googlechat .","title":"Google Chat"},{"location":"services/googlechat/#google_chat","text":"","title":"Google Chat"},{"location":"services/googlechat/#url_format","text":"Your Google Chat Incoming Webhook URL will look like this: https://chat.googleapis.com/v1/spaces/ FOO /messages?key= bar &token= baz The shoutrrr service URL should look like this: googlechat://chat.googleapis.com/v1/spaces/ FOO /messages?key= bar &token= baz In other words the incoming webhook URL with https replaced by googlechat . Google Chat was previously known as Hangouts Chat. Using hangouts in the service URL instead googlechat is still supported, although deprecated.","title":"URL Format"},{"location":"services/googlechat/#creating_an_incoming_webhook_in_google_chat","text":"Open the room you would like to add Shoutrrr to and open the chat room menu. Then click on Configure webhooks . Name the webhook and save. Copy the URL. Format the service URL by replacing https with googlechat .","title":"Creating an incoming webhook in Google Chat"},{"location":"services/gotify/","text":"Gotify \u00b6 URL Format \u00b6 URL Fields \u00b6 Host - Server hostname (and optionally port) ( Required ) URL part: gotify:// host : port /path/token Path - Server subpath Default: empty URL part: gotify://host:port/ path /token Token - Application token ( Required ) URL part: gotify://host:port/path/ token Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. DisableTLS Default: \u274c No Priority Default: 0 Title Default: Shoutrrr notification Examples \u00b6 Common usage gotify://gotify.example.com:443/AzyoeNS.D4iJLVa/?title=Great+News&priority=1 With subpath gotify://example.com:443/path/to/gotify/AzyoeNS.D4iJLVa/?title=Great+News&priority=1","title":"Gotify"},{"location":"services/gotify/#gotify","text":"","title":"Gotify"},{"location":"services/gotify/#url_format","text":"","title":"URL Format"},{"location":"services/gotify/#url_fields","text":"Host - Server hostname (and optionally port) ( Required ) URL part: gotify:// host : port /path/token Path - Server subpath Default: empty URL part: gotify://host:port/ path /token Token - Application token ( Required ) URL part: gotify://host:port/path/ token","title":"URL Fields"},{"location":"services/gotify/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. DisableTLS Default: \u274c No Priority Default: 0 Title Default: Shoutrrr notification","title":"Query/Param Props"},{"location":"services/gotify/#examples","text":"Common usage gotify://gotify.example.com:443/AzyoeNS.D4iJLVa/?title=Great+News&priority=1 With subpath gotify://example.com:443/path/to/gotify/AzyoeNS.D4iJLVa/?title=Great+News&priority=1","title":"Examples"},{"location":"services/hangouts/","text":"Hangouts Chat \u00b6 Google Chat was previously known as Hangouts Chat . See Google Chat . Using hangouts in the service URL instead googlechat is still supported, although deprecated.","title":"Hangouts Chat"},{"location":"services/hangouts/#hangouts_chat","text":"Google Chat was previously known as Hangouts Chat . See Google Chat . Using hangouts in the service URL instead googlechat is still supported, although deprecated.","title":"Hangouts Chat"},{"location":"services/ifttt/","text":"IFTTT \u00b6 URL Format \u00b6 ifttt:// key /?events= event1 [, event2 ,...]&value1= value1 &value2= value2 &value3= value3 URL Fields \u00b6 WebHookID ( Required ) URL part: ifttt:// webhookid / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Events ( Required ) Title - Notification title, optionally set by the sender Default: empty UseMessageAsValue - Sets the corresponding value field to the notification message Default: 2 UseTitleAsValue - Sets the corresponding value field to the notification title Default: 0 Value1 Default: empty Value2 Default: empty Value3 Default: empty","title":"IFTTT"},{"location":"services/ifttt/#ifttt","text":"","title":"IFTTT"},{"location":"services/ifttt/#url_format","text":"ifttt:// key /?events= event1 [, event2 ,...]&value1= value1 &value2= value2 &value3= value3","title":"URL Format"},{"location":"services/ifttt/#url_fields","text":"WebHookID ( Required ) URL part: ifttt:// webhookid /","title":"URL Fields"},{"location":"services/ifttt/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Events ( Required ) Title - Notification title, optionally set by the sender Default: empty UseMessageAsValue - Sets the corresponding value field to the notification message Default: 2 UseTitleAsValue - Sets the corresponding value field to the notification title Default: 0 Value1 Default: empty Value2 Default: empty Value3 Default: empty","title":"Query/Param Props"},{"location":"services/join/","text":"Join \u00b6 URL Format \u00b6 join://shoutrrr: api-key @join/?devices= device1 [, device2 , ...][&icon= icon ][&title= title ] URL Fields \u00b6 APIKey ( Required ) URL part: join://: apikey @join/ Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices - Comma separated list of device IDs ( Required ) Icon - Icon URL Default: empty Title - If set creates a notification Default: empty Guide \u00b6 Go to the Join Webapp Select your device Click Join API Your deviceId is shown in the top Click Show next to API Key to see your key Your Shoutrrr URL will then be: join://shoutrrr: api-key @join/?devices= deviceId Multiple deviceId s can be combined with a , (repeat steps 2-4).","title":"Join"},{"location":"services/join/#join","text":"","title":"Join"},{"location":"services/join/#url_format","text":"join://shoutrrr: api-key @join/?devices= device1 [, device2 , ...][&icon= icon ][&title= title ]","title":"URL Format"},{"location":"services/join/#url_fields","text":"APIKey ( Required ) URL part: join://: apikey @join/","title":"URL Fields"},{"location":"services/join/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices - Comma separated list of device IDs ( Required ) Icon - Icon URL Default: empty Title - If set creates a notification Default: empty","title":"Query/Param Props"},{"location":"services/join/#guide","text":"Go to the Join Webapp Select your device Click Join API Your deviceId is shown in the top Click Show next to API Key to see your key Your Shoutrrr URL will then be: join://shoutrrr: api-key @join/?devices= deviceId Multiple deviceId s can be combined with a , (repeat steps 2-4).","title":"Guide"},{"location":"services/logger/","text":"Logger \u00b6 No configuration options are available for this service. It simply emits notifications to the Shoutrrr log which is configured by the consumer.","title":"Logger"},{"location":"services/logger/#logger","text":"No configuration options are available for this service. It simply emits notifications to the Shoutrrr log which is configured by the consumer.","title":"Logger"},{"location":"services/matrix/","text":"Matrix \u00b6 URL Format \u00b6 matrix:// user : password @ host : port /[?rooms= !roomID1 [, roomAlias2 ]][&disableTLS=yes] Authentication \u00b6 If no user is specified, the password is treated as the authentication token. This means that no matter what login flow your server uses, if you can manually retrieve a token, then Shoutrrr can use it. Password Login Flow \u00b6 If a user and password is supplied, the m.login.password login flow is attempted if the server supports it. Rooms \u00b6 If rooms are not specified, the service will send the message to all the rooms that the user has currently joined. Otherwise, the service will only send the message to the specified rooms. If the user is not in any of those rooms, but have been invited to it, it will automatically accept that invite. Note : The service will not join any rooms unless they are explicitly specified in rooms . If you need the user to join those rooms, you can send a notification with rooms explicitly set once. Room Lookup \u00b6 Rooms specified in rooms will be treated as room IDs if the start with a ! and used directly to identify rooms. If they have no such prefix (or use a correctly escaped # ) they will instead be treated as aliases, and a directory lookup will be used to resolve their corresponding IDs. Note : Don't use unescaped # for the channel aliases as that will be treated as the fragment part of the URL. Either omit them or URL encode them, I.E. rooms=%23alias:server or rooms=alias:server TLS \u00b6 If you do not have TLS enabled on the server you can disable it by providing disableTLS=yes . This will effectively use http intead of https for the API calls.","title":"Matrix"},{"location":"services/matrix/#matrix","text":"","title":"Matrix"},{"location":"services/matrix/#url_format","text":"matrix:// user : password @ host : port /[?rooms= !roomID1 [, roomAlias2 ]][&disableTLS=yes]","title":"URL Format"},{"location":"services/matrix/#authentication","text":"If no user is specified, the password is treated as the authentication token. This means that no matter what login flow your server uses, if you can manually retrieve a token, then Shoutrrr can use it.","title":"Authentication"},{"location":"services/matrix/#password_login_flow","text":"If a user and password is supplied, the m.login.password login flow is attempted if the server supports it.","title":"Password Login Flow"},{"location":"services/matrix/#rooms","text":"If rooms are not specified, the service will send the message to all the rooms that the user has currently joined. Otherwise, the service will only send the message to the specified rooms. If the user is not in any of those rooms, but have been invited to it, it will automatically accept that invite. Note : The service will not join any rooms unless they are explicitly specified in rooms . If you need the user to join those rooms, you can send a notification with rooms explicitly set once.","title":"Rooms"},{"location":"services/matrix/#room_lookup","text":"Rooms specified in rooms will be treated as room IDs if the start with a ! and used directly to identify rooms. If they have no such prefix (or use a correctly escaped # ) they will instead be treated as aliases, and a directory lookup will be used to resolve their corresponding IDs. Note : Don't use unescaped # for the channel aliases as that will be treated as the fragment part of the URL. Either omit them or URL encode them, I.E. rooms=%23alias:server or rooms=alias:server","title":"Room Lookup"},{"location":"services/matrix/#tls","text":"If you do not have TLS enabled on the server you can disable it by providing disableTLS=yes . This will effectively use http intead of https for the API calls.","title":"TLS"},{"location":"services/mattermost/","text":"MatterMost \u00b6 URL Format \u00b6 mattermost://[ username @] mattermost-host / token [/ channel ] URL Fields \u00b6 UserName - Override webhook user Default: empty URL part: mattermost:// username @host:port/token/channel Host - Mattermost server host ( Required ) URL part: mattermost://username@ host : port /token/channel Token - Webhook token ( Required ) URL part: mattermost://username@host:port/ token /channel Channel - Override webhook channel Default: empty URL part: mattermost://username@host:port/token/ channel Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Creating a Webhook in MatterMost \u00b6 Open up the Integrations page by clicking on Integrations within the menu Click Incoming Webhooks Click Add Incoming Webhook Fill in the information for the webhook and click Save If you did everything correctly, MatterMost will give you the URL to your newly created webhook Format the service URL https://your-domain.com/hooks/bywsw8zt5jgpte3nm65qjiru6h \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token mattermost://your-domain.com/bywsw8zt5jgpte3nm65qjiru6h \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token Additional URL configuration \u00b6 Mattermost provides functionality to post as another user or to another channel, compared to the webhook configuration. To do this, you can add a user and/or channel to the service URL. mattermost://shoutrrrUser@your-domain.com/bywsw8zt5jgpte3nm65qjiru6h/shoutrrrChannel \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 user token channel Passing parameters via code \u00b6 If you want to, you also have the possibility to pass parameters to the send function. The following example contains all parameters that are currently supported. params := (*types.Params)( &map[string]string{ \"username\": \"overwriteUserName\", \"channel\": \"overwriteChannel\", }, ) service.Send(\"this is a message\", params) This will overwrite any options, that you passed via URL.","title":"Mattermost"},{"location":"services/mattermost/#mattermost","text":"","title":"MatterMost"},{"location":"services/mattermost/#url_format","text":"mattermost://[ username @] mattermost-host / token [/ channel ]","title":"URL Format"},{"location":"services/mattermost/#url_fields","text":"UserName - Override webhook user Default: empty URL part: mattermost:// username @host:port/token/channel Host - Mattermost server host ( Required ) URL part: mattermost://username@ host : port /token/channel Token - Webhook token ( Required ) URL part: mattermost://username@host:port/ token /channel Channel - Override webhook channel Default: empty URL part: mattermost://username@host:port/token/ channel","title":"URL Fields"},{"location":"services/mattermost/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Query/Param Props"},{"location":"services/mattermost/#creating_a_webhook_in_mattermost","text":"Open up the Integrations page by clicking on Integrations within the menu Click Incoming Webhooks Click Add Incoming Webhook Fill in the information for the webhook and click Save If you did everything correctly, MatterMost will give you the URL to your newly created webhook Format the service URL https://your-domain.com/hooks/bywsw8zt5jgpte3nm65qjiru6h \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token mattermost://your-domain.com/bywsw8zt5jgpte3nm65qjiru6h \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token","title":"Creating a Webhook in MatterMost"},{"location":"services/mattermost/#additional_url_configuration","text":"Mattermost provides functionality to post as another user or to another channel, compared to the webhook configuration. To do this, you can add a user and/or channel to the service URL. mattermost://shoutrrrUser@your-domain.com/bywsw8zt5jgpte3nm65qjiru6h/shoutrrrChannel \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 user token channel","title":"Additional URL configuration"},{"location":"services/mattermost/#passing_parameters_via_code","text":"If you want to, you also have the possibility to pass parameters to the send function. The following example contains all parameters that are currently supported. params := (*types.Params)( &map[string]string{ \"username\": \"overwriteUserName\", \"channel\": \"overwriteChannel\", }, ) service.Send(\"this is a message\", params) This will overwrite any options, that you passed via URL.","title":"Passing parameters via code"},{"location":"services/opsgenie/","text":"OpsGenie \u00b6 URL Format \u00b6 URL Fields \u00b6 Host - The OpsGenie API host. Use 'api.eu.opsgenie.com' for EU instances Default: api.opsgenie.com URL part: opsgenie:// host :port/apikey Port - The OpsGenie API port. Default: 443 URL part: opsgenie://host: port /apikey APIKey - The OpsGenie API key ( Required ) URL part: opsgenie://host:port/ apikey Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Actions - Custom actions that will be available for the alert Default: empty Alias - Client-defined identifier of the alert Default: empty Description - Description field of the alert Default: empty Details - Map of key-value pairs to use as custom properties of the alert Default: empty Entity - Entity field of the alert that is generally used to specify which domain the Source field of the alert Default: empty Note - Additional note that will be added while creating the alert Default: empty Priority - Priority level of the alert. Possible values are P1, P2, P3, P4 and P5 Default: empty Responders - Teams, users, escalations and schedules that the alert will be routed to send notifications Default: empty Source - Source field of the alert Default: empty Tags - Tags of the alert Default: empty Title - notification title, optionally set by the sender Default: empty User - Display name of the request owner Default: empty VisibleTo - Teams and users that the alert will become visible to without sending any notification Default: empty Creating a REST API endpoint in OpsGenie \u00b6 Open up the Integration List page by clicking on Settings => Integration List within the menu Click API => Add Make sure Create and Update Access and Enabled are checked and click Save Integration Copy the API Key Format the service URL The host can be either api.opsgenie.com or api.eu.opsgenie.com depending on the location of your instance. See the OpsGenie documentation for details. opsgenie://api.opsgenie.com/eb243592-faa2-4ba2-a551q-1afdf565c889 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token Passing parameters via code \u00b6 If you want to, you can pass additional parameters to the send function. The following example contains all parameters that are currently supported. service . Send ( \"An example alert message\" , & types . Params { \"alias\" : \"Life is too short for no alias\" , \"description\" : \"Every alert needs a description\" , \"responders\" : `[{\"id\":\"4513b7ea-3b91-438f-b7e4-e3e54af9147c\",\"type\":\"team\"},{\"name\":\"NOC\",\"type\":\"team\"}]` , \"visibleTo\" : `[{\"id\":\"4513b7ea-3b91-438f-b7e4-e3e54af9147c\",\"type\":\"team\"},{\"name\":\"rocket_team\",\"type\":\"team\"}]` , \"actions\" : \"An action\" , \"tags\" : \"tag1 tag2\" , \"details\" : `{\"key1\": \"value1\", \"key2\": \"value2\"}` , \"entity\" : \"An example entity\" , \"source\" : \"The source\" , \"priority\" : \"P1\" , \"user\" : \"Dracula\" , \"note\" : \"Here is a note\" , }) Optional parameters \u00b6 You can optionally specify the parameters in the URL: opsgenie://api.opsgenie.com/eb243592-faa2-4ba2-a551q-1afdf565c889?alias=Life+is+too+short+for+no+alias&description=Every+alert+needs+a+description&actions=An+action&tags=[\"tag1\",\"tag2\"]&entity=An+example+entity&source=The+source&priority=P1&user=Dracula&note=Here+is+a+note Example using the command line: shoutrrr send -u 'opsgenie://api.eu.opsgenie.com/token?tags=[\"tag1\",\"tag2\"]&description=testing&responders=[{\"username\":\"superuser\", \"type\": \"user\"}]&entity=Example Entity&source=Example Source&actions=[\"asdf\", \"bcde\"]' -m \"Hello World6\"","title":"OpsGenie"},{"location":"services/opsgenie/#opsgenie","text":"","title":"OpsGenie"},{"location":"services/opsgenie/#url_format","text":"","title":"URL Format"},{"location":"services/opsgenie/#url_fields","text":"Host - The OpsGenie API host. Use 'api.eu.opsgenie.com' for EU instances Default: api.opsgenie.com URL part: opsgenie:// host :port/apikey Port - The OpsGenie API port. Default: 443 URL part: opsgenie://host: port /apikey APIKey - The OpsGenie API key ( Required ) URL part: opsgenie://host:port/ apikey","title":"URL Fields"},{"location":"services/opsgenie/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Actions - Custom actions that will be available for the alert Default: empty Alias - Client-defined identifier of the alert Default: empty Description - Description field of the alert Default: empty Details - Map of key-value pairs to use as custom properties of the alert Default: empty Entity - Entity field of the alert that is generally used to specify which domain the Source field of the alert Default: empty Note - Additional note that will be added while creating the alert Default: empty Priority - Priority level of the alert. Possible values are P1, P2, P3, P4 and P5 Default: empty Responders - Teams, users, escalations and schedules that the alert will be routed to send notifications Default: empty Source - Source field of the alert Default: empty Tags - Tags of the alert Default: empty Title - notification title, optionally set by the sender Default: empty User - Display name of the request owner Default: empty VisibleTo - Teams and users that the alert will become visible to without sending any notification Default: empty","title":"Query/Param Props"},{"location":"services/opsgenie/#creating_a_rest_api_endpoint_in_opsgenie","text":"Open up the Integration List page by clicking on Settings => Integration List within the menu Click API => Add Make sure Create and Update Access and Enabled are checked and click Save Integration Copy the API Key Format the service URL The host can be either api.opsgenie.com or api.eu.opsgenie.com depending on the location of your instance. See the OpsGenie documentation for details. opsgenie://api.opsgenie.com/eb243592-faa2-4ba2-a551q-1afdf565c889 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token","title":"Creating a REST API endpoint in OpsGenie"},{"location":"services/opsgenie/#passing_parameters_via_code","text":"If you want to, you can pass additional parameters to the send function. The following example contains all parameters that are currently supported. service . Send ( \"An example alert message\" , & types . Params { \"alias\" : \"Life is too short for no alias\" , \"description\" : \"Every alert needs a description\" , \"responders\" : `[{\"id\":\"4513b7ea-3b91-438f-b7e4-e3e54af9147c\",\"type\":\"team\"},{\"name\":\"NOC\",\"type\":\"team\"}]` , \"visibleTo\" : `[{\"id\":\"4513b7ea-3b91-438f-b7e4-e3e54af9147c\",\"type\":\"team\"},{\"name\":\"rocket_team\",\"type\":\"team\"}]` , \"actions\" : \"An action\" , \"tags\" : \"tag1 tag2\" , \"details\" : `{\"key1\": \"value1\", \"key2\": \"value2\"}` , \"entity\" : \"An example entity\" , \"source\" : \"The source\" , \"priority\" : \"P1\" , \"user\" : \"Dracula\" , \"note\" : \"Here is a note\" , })","title":"Passing parameters via code"},{"location":"services/opsgenie/#optional_parameters","text":"You can optionally specify the parameters in the URL: opsgenie://api.opsgenie.com/eb243592-faa2-4ba2-a551q-1afdf565c889?alias=Life+is+too+short+for+no+alias&description=Every+alert+needs+a+description&actions=An+action&tags=[\"tag1\",\"tag2\"]&entity=An+example+entity&source=The+source&priority=P1&user=Dracula&note=Here+is+a+note Example using the command line: shoutrrr send -u 'opsgenie://api.eu.opsgenie.com/token?tags=[\"tag1\",\"tag2\"]&description=testing&responders=[{\"username\":\"superuser\", \"type\": \"user\"}]&entity=Example Entity&source=Example Source&actions=[\"asdf\", \"bcde\"]' -m \"Hello World6\"","title":"Optional parameters"},{"location":"services/overview/","text":"Services overview \u00b6 Click on the service for a more thorough explanation. Service URL format Discord discord:// token @ id Email smtp:// username : password @ host : port /?fromAddress= fromAddress &toAddresses= recipient1 [, recipient2 ,...] Gotify gotify:// gotify-host / token Google Chat googlechat://chat.googleapis.com/v1/spaces/FOO/messages?key=bar&token=baz IFTTT ifttt:// key /?events= event1 [, event2 ,...]&value1= value1 &value2= value2 &value3= value3 Join join://shoutrrr: api-key @join/?devices= device1 [, device2 , ...][&icon= icon ][&title= title ] Mattermost mattermost://[ username @] mattermost-host / token [/ channel ] Matrix matrix:// username : password @ host : port /[?rooms= !roomID1 [, roomAlias2 ]] OpsGenie opsgenie:// host /token?responders= responder1 [, responder2 ] Pushbullet pushbullet:// api-token [/ device /# channel / email ] Pushover pushover://shoutrrr: apiToken @ userKey /?devices= device1 [, device2 , ...] Rocketchat rocketchat://[ username @] rocketchat-host / token [/ channel | @recipient ] Slack slack://[ botname @] token-a / token-b / token-c Teams teams:// token-a / token-b / token-c Telegram telegram:// token @telegram?channels= channel-1 [, channel-2 ,...] Zulip Chat zulip:// bot-mail : bot-key @ zulip-domain /?stream= name-or-id &topic= name Specialized services \u00b6 Service Description Logger Writes notification to a configured go log.Logger Generic Webhook Sends notifications directly to a webhook","title":"Service Overview"},{"location":"services/overview/#services_overview","text":"Click on the service for a more thorough explanation. Service URL format Discord discord:// token @ id Email smtp:// username : password @ host : port /?fromAddress= fromAddress &toAddresses= recipient1 [, recipient2 ,...] Gotify gotify:// gotify-host / token Google Chat googlechat://chat.googleapis.com/v1/spaces/FOO/messages?key=bar&token=baz IFTTT ifttt:// key /?events= event1 [, event2 ,...]&value1= value1 &value2= value2 &value3= value3 Join join://shoutrrr: api-key @join/?devices= device1 [, device2 , ...][&icon= icon ][&title= title ] Mattermost mattermost://[ username @] mattermost-host / token [/ channel ] Matrix matrix:// username : password @ host : port /[?rooms= !roomID1 [, roomAlias2 ]] OpsGenie opsgenie:// host /token?responders= responder1 [, responder2 ] Pushbullet pushbullet:// api-token [/ device /# channel / email ] Pushover pushover://shoutrrr: apiToken @ userKey /?devices= device1 [, device2 , ...] Rocketchat rocketchat://[ username @] rocketchat-host / token [/ channel | @recipient ] Slack slack://[ botname @] token-a / token-b / token-c Teams teams:// token-a / token-b / token-c Telegram telegram:// token @telegram?channels= channel-1 [, channel-2 ,...] Zulip Chat zulip:// bot-mail : bot-key @ zulip-domain /?stream= name-or-id &topic= name","title":"Services overview"},{"location":"services/overview/#specialized_services","text":"Service Description Logger Writes notification to a configured go log.Logger Generic Webhook Sends notifications directly to a webhook","title":"Specialized services"},{"location":"services/pushbullet/","text":"Pushbullet \u00b6 URL Format \u00b6 pushbullet:// api-token [/ device /# channel / email ] URL Fields \u00b6 Token ( Required ) URL part: pushbullet:// token /targets Targets ( Required ) URL part: pushbullet://token/ targets Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Title Default: Shoutrrr notification","title":"Pushbullet"},{"location":"services/pushbullet/#pushbullet","text":"","title":"Pushbullet"},{"location":"services/pushbullet/#url_format","text":"pushbullet:// api-token [/ device /# channel / email ]","title":"URL Format"},{"location":"services/pushbullet/#url_fields","text":"Token ( Required ) URL part: pushbullet:// token /targets Targets ( Required ) URL part: pushbullet://token/ targets","title":"URL Fields"},{"location":"services/pushbullet/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Title Default: Shoutrrr notification","title":"Query/Param Props"},{"location":"services/pushover/","text":"Pushover \u00b6 URL Format \u00b6 pushover://shoutrrr: apiToken @ userKey /?devices= device1 [, device2 , ...] URL Fields \u00b6 Token - API Token/Key ( Required ) URL part: pushover://: token @user/ User - User Key ( Required ) URL part: pushover://:token@ user / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices Default: empty Priority Default: 0 Title Default: empty Getting the keys from Pushover \u00b6 At your Pushover dashboard you can view your userKey in the top right. The Name column of the device list is what is used to refer to your devices ( device1 etc.) At the bottom of the same page there are links your applications , where you can find your apiToken The apiToken is displayed at the top of the application page. Optional parameters \u00b6 You can optionally specify the title and priority parameters in the URL: pushover://shoutrrr: token @ userKey /?devices= device &title=Custom+Title&priority=1 Note Only supply priority values between -1 and 1, since 2 requires additional parameters that are not supported yet. Please refer to the Pushover API documentation for more information.","title":"Pushover"},{"location":"services/pushover/#pushover","text":"","title":"Pushover"},{"location":"services/pushover/#url_format","text":"pushover://shoutrrr: apiToken @ userKey /?devices= device1 [, device2 , ...]","title":"URL Format"},{"location":"services/pushover/#url_fields","text":"Token - API Token/Key ( Required ) URL part: pushover://: token @user/ User - User Key ( Required ) URL part: pushover://:token@ user /","title":"URL Fields"},{"location":"services/pushover/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices Default: empty Priority Default: 0 Title Default: empty","title":"Query/Param Props"},{"location":"services/pushover/#getting_the_keys_from_pushover","text":"At your Pushover dashboard you can view your userKey in the top right. The Name column of the device list is what is used to refer to your devices ( device1 etc.) At the bottom of the same page there are links your applications , where you can find your apiToken The apiToken is displayed at the top of the application page.","title":"Getting the keys from Pushover"},{"location":"services/pushover/#optional_parameters","text":"You can optionally specify the title and priority parameters in the URL: pushover://shoutrrr: token @ userKey /?devices= device &title=Custom+Title&priority=1 Note Only supply priority values between -1 and 1, since 2 requires additional parameters that are not supported yet. Please refer to the Pushover API documentation for more information.","title":"Optional parameters"},{"location":"services/rocketchat/","text":"Rocket.chat \u00b6 URL Format \u00b6 rocketchat://[ username @] rocketchat-host / token [/ channel | @recipient ]* URL Fields \u00b6 UserName Default: empty URL part: rocketchat:// username @host:port/tokena/tokenb/channel Host ( Required ) URL part: rocketchat://username@ host :port/tokena/tokenb/channel Port ( Required ) URL part: rocketchat://username@host: port /tokena/tokenb/channel TokenA ( Required ) URL part: rocketchat://username@host:port/ tokena /tokenb/channel TokenB ( Required ) URL part: rocketchat://username@host:port/tokena/ tokenb /channel Channel ( Required ) URL part: rocketchat://username@host:port/tokena/tokenb/ channel Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Creating a Webhook in Rocket.chat \u00b6 Open up the chat Administration by clicking on Administration menu Open Integrations and then click New Fill in the information for the webhook and click Save . Please don't forget to Enable your integration. If you did everything correctly, Rocket.chat will give you the URL and Token to your newly created webhook. Format the service URL rocketchat://your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token Additional URL configuration \u00b6 Rocket.chat provides functionality to post as another user or to another channel / user, compared to the webhook configuration. To do this, you can add a sender and/or channel / receiver to the service URL. rocketchat://shoutrrrUser@your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX/shoutrrrChannel \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 sender token channel rocketchat://shoutrrrUser@your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX/@shoutrrrReceiver \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 sender token receiver Passing parameters via code \u00b6 If you want to, you also have the possibility to pass parameters to the send function. The following example contains all parameters that are currently supported. params := (*types.Params)( &map[string]string{ \"username\": \"overwriteUserName\", \"channel\": \"overwriteChannel\", }, ) service.Send(\"this is a message\", params) This will overwrite any options, that you passed via URL. For more Rocket.chat Webhooks options see official guide .","title":"Rocketchat"},{"location":"services/rocketchat/#rocketchat","text":"","title":"Rocket.chat"},{"location":"services/rocketchat/#url_format","text":"rocketchat://[ username @] rocketchat-host / token [/ channel | @recipient ]*","title":"URL Format"},{"location":"services/rocketchat/#url_fields","text":"UserName Default: empty URL part: rocketchat:// username @host:port/tokena/tokenb/channel Host ( Required ) URL part: rocketchat://username@ host :port/tokena/tokenb/channel Port ( Required ) URL part: rocketchat://username@host: port /tokena/tokenb/channel TokenA ( Required ) URL part: rocketchat://username@host:port/ tokena /tokenb/channel TokenB ( Required ) URL part: rocketchat://username@host:port/tokena/ tokenb /channel Channel ( Required ) URL part: rocketchat://username@host:port/tokena/tokenb/ channel","title":"URL Fields"},{"location":"services/rocketchat/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Query/Param Props"},{"location":"services/rocketchat/#creating_a_webhook_in_rocketchat","text":"Open up the chat Administration by clicking on Administration menu Open Integrations and then click New Fill in the information for the webhook and click Save . Please don't forget to Enable your integration. If you did everything correctly, Rocket.chat will give you the URL and Token to your newly created webhook. Format the service URL rocketchat://your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 token","title":"Creating a Webhook in Rocket.chat"},{"location":"services/rocketchat/#additional_url_configuration","text":"Rocket.chat provides functionality to post as another user or to another channel / user, compared to the webhook configuration. To do this, you can add a sender and/or channel / receiver to the service URL. rocketchat://shoutrrrUser@your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX/shoutrrrChannel \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 sender token channel rocketchat://shoutrrrUser@your-domain.com/8eGdRzc9r4YYNyvge/2XYQcX9NBwJBKfQnphpebPcnXZcPEi32Nt4NKJfrnbhsbRfX/@shoutrrrReceiver \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 sender token receiver","title":"Additional URL configuration"},{"location":"services/rocketchat/#passing_parameters_via_code","text":"If you want to, you also have the possibility to pass parameters to the send function. The following example contains all parameters that are currently supported. params := (*types.Params)( &map[string]string{ \"username\": \"overwriteUserName\", \"channel\": \"overwriteChannel\", }, ) service.Send(\"this is a message\", params) This will overwrite any options, that you passed via URL. For more Rocket.chat Webhooks options see official guide .","title":"Passing parameters via code"},{"location":"services/slack/","text":"Slack \u00b6 New URL format The URL format for Slack has been changed to allow for API- as well as webhook tokens. Using the old format ( slack://xxxx/yyyy/zzzz ) will still work as before and will automatically be upgraded to the new format when used. The Slack notification service uses either Slack Webhooks or the Bot API to send messages. See the guides for information on how to get your token and channel . URL Format \u00b6 Note that the token uses a prefix to determine the type, usually either hook (for webhooks) or xoxb (for bot API). URL Fields \u00b6 Token - API Bot token ( Required ) URL part: slack:// token : token @channel/ Channel - Channel to send messages to in Cxxxxxxxxxx format ( Required ) URL part: slack://token:token@ channel / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. BotName - Bot name Default: empty Aliases: username Color - Message left-hand border color Default: empty Icon - Use emoji or URL as icon (based on presence of http(s):// prefix) Default: empty Aliases: icon_emoji , icon_url ThreadTS - ts value of the parent message (to send message as reply in thread) Default: empty Title - Prepended text above the message Default: empty Color format The format for the Color prop follows the slack docs but # needs to be escaped as %23 when passed in a URL. So #ff8000 would be %23ff8000 etc. Examples \u00b6 Bot API slack://xoxb:123456789012-1234567890123-4mt0t4l1YL3g1T5L4cK70k3N@C001CH4NN3L?color=good&title=Great+News&icon=man-scientist&botname=Shoutrrrbot Webhook slack://hook:WNA3PBYV6-F20DUQND3RQ-Webc4MAvoacrpPakR8phF0zi@webhook?color=good&title=Great+News&icon=man-scientist&botname=Shoutrrrbot","title":"Slack"},{"location":"services/slack/#slack","text":"New URL format The URL format for Slack has been changed to allow for API- as well as webhook tokens. Using the old format ( slack://xxxx/yyyy/zzzz ) will still work as before and will automatically be upgraded to the new format when used. The Slack notification service uses either Slack Webhooks or the Bot API to send messages. See the guides for information on how to get your token and channel .","title":"Slack"},{"location":"services/slack/#url_format","text":"Note that the token uses a prefix to determine the type, usually either hook (for webhooks) or xoxb (for bot API).","title":"URL Format"},{"location":"services/slack/#url_fields","text":"Token - API Bot token ( Required ) URL part: slack:// token : token @channel/ Channel - Channel to send messages to in Cxxxxxxxxxx format ( Required ) URL part: slack://token:token@ channel /","title":"URL Fields"},{"location":"services/slack/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. BotName - Bot name Default: empty Aliases: username Color - Message left-hand border color Default: empty Icon - Use emoji or URL as icon (based on presence of http(s):// prefix) Default: empty Aliases: icon_emoji , icon_url ThreadTS - ts value of the parent message (to send message as reply in thread) Default: empty Title - Prepended text above the message Default: empty Color format The format for the Color prop follows the slack docs but # needs to be escaped as %23 when passed in a URL. So #ff8000 would be %23ff8000 etc.","title":"Query/Param Props"},{"location":"services/slack/#examples","text":"Bot API slack://xoxb:123456789012-1234567890123-4mt0t4l1YL3g1T5L4cK70k3N@C001CH4NN3L?color=good&title=Great+News&icon=man-scientist&botname=Shoutrrrbot Webhook slack://hook:WNA3PBYV6-F20DUQND3RQ-Webc4MAvoacrpPakR8phF0zi@webhook?color=good&title=Great+News&icon=man-scientist&botname=Shoutrrrbot","title":"Examples"},{"location":"services/teams/","text":"Teams \u00b6 Attention Microsoft has changed the URL scheme for Teams webhooks. You will now have to specify the hostname using: ?host=example.webhook.office.com Where example is your organization short name URL Format \u00b6 teams:// group @ tenant / altId / groupOwner ?host=example.webhook.office.com URL Fields \u00b6 Group Default: empty URL part: teams:// group @tenant/altid/groupowner Tenant Default: empty URL part: teams://group@ tenant /altid/groupowner AltID Default: empty URL part: teams://group@tenant/ altid /groupowner GroupOwner Default: empty URL part: teams://group@tenant/altid/ groupowner Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Color Default: empty Host Default: outlook.office.com Title Default: empty Setting up a webhook \u00b6 To be able to use the Microsoft Teams notification service, you first need to set up a custom webhook. Instructions on how to do this can be found in this guide Extracting the token \u00b6 The token is extracted from your webhook URL: https://outlook.office.com/webhook/{tokenA}/IncomingWebhook/{tokenB}/{tokenC}","title":"Teams"},{"location":"services/teams/#teams","text":"Attention Microsoft has changed the URL scheme for Teams webhooks. You will now have to specify the hostname using: ?host=example.webhook.office.com Where example is your organization short name","title":"Teams"},{"location":"services/teams/#url_format","text":"teams:// group @ tenant / altId / groupOwner ?host=example.webhook.office.com","title":"URL Format"},{"location":"services/teams/#url_fields","text":"Group Default: empty URL part: teams:// group @tenant/altid/groupowner Tenant Default: empty URL part: teams://group@ tenant /altid/groupowner AltID Default: empty URL part: teams://group@tenant/ altid /groupowner GroupOwner Default: empty URL part: teams://group@tenant/altid/ groupowner","title":"URL Fields"},{"location":"services/teams/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Color Default: empty Host Default: outlook.office.com Title Default: empty","title":"Query/Param Props"},{"location":"services/teams/#setting_up_a_webhook","text":"To be able to use the Microsoft Teams notification service, you first need to set up a custom webhook. Instructions on how to do this can be found in this guide","title":"Setting up a webhook"},{"location":"services/teams/#extracting_the_token","text":"The token is extracted from your webhook URL: https://outlook.office.com/webhook/{tokenA}/IncomingWebhook/{tokenB}/{tokenC}","title":"Extracting the token"},{"location":"services/telegram/","text":"Telegram \u00b6 URL Format \u00b6 telegram:// token @telegram?channels= channel-1 [, channel-2 ,...] URL Fields \u00b6 Token ( Required ) URL part: telegram:// token @telegram/ Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Chats ( Required ) Aliases: channels Notification - If disabled, sends Message silently Default: \u2714 Yes ParseMode - How the text Message should be parsed Default: None Possible values: None , Markdown , HTML , MarkdownV2 Preview - If disabled, no web page preview will be displayed for URLs Default: \u2714 Yes Title - Notification title, optionally set by the sender Default: empty Getting a token for Telegram \u00b6 Talk to the botfather . Optional parameters \u00b6 You can optionally specify the notification , parseMode and preview parameters in the URL: telegram:// token @ telegram /?channels= channel &notification=no&preview=false&parseMode=markDownv2 See the telegram documentation for more information. Note: preview and notification are inverted in regards to their API counterparts ( disable_web_page_preview and disable_notification )","title":"Telegram"},{"location":"services/telegram/#telegram","text":"","title":"Telegram"},{"location":"services/telegram/#url_format","text":"telegram:// token @telegram?channels= channel-1 [, channel-2 ,...]","title":"URL Format"},{"location":"services/telegram/#url_fields","text":"Token ( Required ) URL part: telegram:// token @telegram/","title":"URL Fields"},{"location":"services/telegram/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Chats ( Required ) Aliases: channels Notification - If disabled, sends Message silently Default: \u2714 Yes ParseMode - How the text Message should be parsed Default: None Possible values: None , Markdown , HTML , MarkdownV2 Preview - If disabled, no web page preview will be displayed for URLs Default: \u2714 Yes Title - Notification title, optionally set by the sender Default: empty","title":"Query/Param Props"},{"location":"services/telegram/#getting_a_token_for_telegram","text":"Talk to the botfather .","title":"Getting a token for Telegram"},{"location":"services/telegram/#optional_parameters","text":"You can optionally specify the notification , parseMode and preview parameters in the URL: telegram:// token @ telegram /?channels= channel &notification=no&preview=false&parseMode=markDownv2 See the telegram documentation for more information. Note: preview and notification are inverted in regards to their API counterparts ( disable_web_page_preview and disable_notification )","title":"Optional parameters"},{"location":"services/zulip/","text":"Zulip Chat \u00b6 URL Format \u00b6 The shoutrrr service URL should look like this: zulip:// bot-mail : bot-key @ zulip-domain /?stream= name-or-id &topic= name URL Fields \u00b6 BotMail - Bot e-mail address ( Required ) URL part: zulip:// botmail :botkey@host:port/ BotKey - API Key ( Required ) URL part: zulip://botmail: botkey @host:port/ Host - API server hostname ( Required ) URL part: zulip://botmail:botkey@ host : port / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Stream Default: empty Topic Default: empty Aliases: title Note Since bot-mail is a mail address you need to URL escape the @ in it to %40 . Examples \u00b6 Stream and topic are both optional and can be given as parameters to the Send method: sender , __ := shoutrrr . CreateSender ( url ) params := make ( types . Params ) params [ \"stream\" ] = \"mystream\" params [ \"topic\" ] = \"This is my topic\" sender . Send ( message , & params ) Example service URL zulip://my-bot%40zulipchat.com:correcthorsebatterystable@example.zulipchat.com?stream=foo&topic=bar","title":"Zulip Chat"},{"location":"services/zulip/#zulip_chat","text":"","title":"Zulip Chat"},{"location":"services/zulip/#url_format","text":"The shoutrrr service URL should look like this: zulip:// bot-mail : bot-key @ zulip-domain /?stream= name-or-id &topic= name","title":"URL Format"},{"location":"services/zulip/#url_fields","text":"BotMail - Bot e-mail address ( Required ) URL part: zulip:// botmail :botkey@host:port/ BotKey - API Key ( Required ) URL part: zulip://botmail: botkey @host:port/ Host - API server hostname ( Required ) URL part: zulip://botmail:botkey@ host : port /","title":"URL Fields"},{"location":"services/zulip/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Stream Default: empty Topic Default: empty Aliases: title Note Since bot-mail is a mail address you need to URL escape the @ in it to %40 .","title":"Query/Param Props"},{"location":"services/zulip/#examples","text":"Stream and topic are both optional and can be given as parameters to the Send method: sender , __ := shoutrrr . CreateSender ( url ) params := make ( types . Params ) params [ \"stream\" ] = \"mystream\" params [ \"topic\" ] = \"This is my topic\" sender . Send ( message , & params ) Example service URL zulip://my-bot%40zulipchat.com:correcthorsebatterystable@example.zulipchat.com?stream=foo&topic=bar","title":"Examples"},{"location":"services/discord/config/","text":"URL Fields \u00b6 Token ( Required ) URL part: discord:// token @webhookid/ WebhookID ( Required ) URL part: discord://token@ webhookid / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Avatar - Override the webhook default avatar with specified URL Default: empty Aliases: avatarurl Color - The color of the left border for plain messages Default: 0x50D9ff ColorDebug - The color of the left border for debug messages Default: 0x7b00ab ColorError - The color of the left border for error messages Default: 0xd60510 ColorInfo - The color of the left border for info messages Default: 0x2488ff ColorWarn - The color of the left border for warning messages Default: 0xffc441 JSON - Whether to send the whole message as the JSON payload instead of using it as the 'content' field Default: \u274c No SplitLines - Whether to send each line as a separate embedded item Default: \u2714 Yes Title Default: empty Username - Override the webhook default username Default: empty","title":"Config"},{"location":"services/discord/config/#url_fields","text":"Token ( Required ) URL part: discord:// token @webhookid/ WebhookID ( Required ) URL part: discord://token@ webhookid /","title":"URL Fields"},{"location":"services/discord/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Avatar - Override the webhook default avatar with specified URL Default: empty Aliases: avatarurl Color - The color of the left border for plain messages Default: 0x50D9ff ColorDebug - The color of the left border for debug messages Default: 0x7b00ab ColorError - The color of the left border for error messages Default: 0xd60510 ColorInfo - The color of the left border for info messages Default: 0x2488ff ColorWarn - The color of the left border for warning messages Default: 0xffc441 JSON - Whether to send the whole message as the JSON payload instead of using it as the 'content' field Default: \u274c No SplitLines - Whether to send each line as a separate embedded item Default: \u2714 Yes Title Default: empty Username - Override the webhook default username Default: empty","title":"Query/Param Props"},{"location":"services/generic/config/","text":"URL Fields \u00b6 Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. ContentType - The value of the Content-Type header Default: application/json DisableTLS Default: \u274c No Template Default: empty Title Default: empty","title":"Config"},{"location":"services/generic/config/#url_fields","text":"","title":"URL Fields"},{"location":"services/generic/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. ContentType - The value of the Content-Type header Default: application/json DisableTLS Default: \u274c No Template Default: empty Title Default: empty","title":"Query/Param Props"},{"location":"services/googlechat/config/","text":"URL Fields \u00b6 Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Key ( Required ) Path ( Required ) Token ( Required ) Host Default: chat.googleapis.com","title":"Config"},{"location":"services/googlechat/config/#url_fields","text":"","title":"URL Fields"},{"location":"services/googlechat/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Key ( Required ) Path ( Required ) Token ( Required ) Host Default: chat.googleapis.com","title":"Query/Param Props"},{"location":"services/gotify/config/","text":"URL Fields \u00b6 Host - Server hostname (and optionally port) ( Required ) URL part: gotify:// host : port /path/token Path - Server subpath Default: empty URL part: gotify://host:port/ path /token Token - Application token ( Required ) URL part: gotify://host:port/path/ token Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. DisableTLS Default: \u274c No Priority Default: 0 Title Default: Shoutrrr notification","title":"Config"},{"location":"services/gotify/config/#url_fields","text":"Host - Server hostname (and optionally port) ( Required ) URL part: gotify:// host : port /path/token Path - Server subpath Default: empty URL part: gotify://host:port/ path /token Token - Application token ( Required ) URL part: gotify://host:port/path/ token","title":"URL Fields"},{"location":"services/gotify/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. DisableTLS Default: \u274c No Priority Default: 0 Title Default: Shoutrrr notification","title":"Query/Param Props"},{"location":"services/ifttt/config/","text":"URL Fields \u00b6 WebHookID ( Required ) URL part: ifttt:// webhookid / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Events ( Required ) Title - Notification title, optionally set by the sender Default: empty UseMessageAsValue - Sets the corresponding value field to the notification message Default: 2 UseTitleAsValue - Sets the corresponding value field to the notification title Default: 0 Value1 Default: empty Value2 Default: empty Value3 Default: empty","title":"Config"},{"location":"services/ifttt/config/#url_fields","text":"WebHookID ( Required ) URL part: ifttt:// webhookid /","title":"URL Fields"},{"location":"services/ifttt/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Events ( Required ) Title - Notification title, optionally set by the sender Default: empty UseMessageAsValue - Sets the corresponding value field to the notification message Default: 2 UseTitleAsValue - Sets the corresponding value field to the notification title Default: 0 Value1 Default: empty Value2 Default: empty Value3 Default: empty","title":"Query/Param Props"},{"location":"services/join/config/","text":"URL Fields \u00b6 APIKey ( Required ) URL part: join://: apikey @join/ Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices - Comma separated list of device IDs ( Required ) Icon - Icon URL Default: empty Title - If set creates a notification Default: empty","title":"Config"},{"location":"services/join/config/#url_fields","text":"APIKey ( Required ) URL part: join://: apikey @join/","title":"URL Fields"},{"location":"services/join/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices - Comma separated list of device IDs ( Required ) Icon - Icon URL Default: empty Title - If set creates a notification Default: empty","title":"Query/Param Props"},{"location":"services/logger/config/","text":"URL Fields \u00b6 Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Config"},{"location":"services/logger/config/#url_fields","text":"","title":"URL Fields"},{"location":"services/logger/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Query/Param Props"},{"location":"services/matrix/config/","text":"URL Fields \u00b6 Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Host ( Required ) Password ( Required ) DisableTLS Default: \u274c No Rooms Default: empty User Default: empty","title":"Config"},{"location":"services/matrix/config/#url_fields","text":"","title":"URL Fields"},{"location":"services/matrix/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Host ( Required ) Password ( Required ) DisableTLS Default: \u274c No Rooms Default: empty User Default: empty","title":"Query/Param Props"},{"location":"services/mattermost/config/","text":"URL Fields \u00b6 UserName - Override webhook user Default: empty URL part: mattermost:// username @host:port/token/channel Host - Mattermost server host ( Required ) URL part: mattermost://username@ host : port /token/channel Token - Webhook token ( Required ) URL part: mattermost://username@host:port/ token /channel Channel - Override webhook channel Default: empty URL part: mattermost://username@host:port/token/ channel Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Config"},{"location":"services/mattermost/config/#url_fields","text":"UserName - Override webhook user Default: empty URL part: mattermost:// username @host:port/token/channel Host - Mattermost server host ( Required ) URL part: mattermost://username@ host : port /token/channel Token - Webhook token ( Required ) URL part: mattermost://username@host:port/ token /channel Channel - Override webhook channel Default: empty URL part: mattermost://username@host:port/token/ channel","title":"URL Fields"},{"location":"services/mattermost/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Query/Param Props"},{"location":"services/opsgenie/config/","text":"URL Fields \u00b6 Host - The OpsGenie API host. Use 'api.eu.opsgenie.com' for EU instances Default: api.opsgenie.com URL part: opsgenie:// host :port/apikey Port - The OpsGenie API port. Default: 443 URL part: opsgenie://host: port /apikey APIKey - The OpsGenie API key ( Required ) URL part: opsgenie://host:port/ apikey Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Actions - Custom actions that will be available for the alert Default: empty Alias - Client-defined identifier of the alert Default: empty Description - Description field of the alert Default: empty Details - Map of key-value pairs to use as custom properties of the alert Default: empty Entity - Entity field of the alert that is generally used to specify which domain the Source field of the alert Default: empty Note - Additional note that will be added while creating the alert Default: empty Priority - Priority level of the alert. Possible values are P1, P2, P3, P4 and P5 Default: empty Responders - Teams, users, escalations and schedules that the alert will be routed to send notifications Default: empty Source - Source field of the alert Default: empty Tags - Tags of the alert Default: empty Title - notification title, optionally set by the sender Default: empty User - Display name of the request owner Default: empty VisibleTo - Teams and users that the alert will become visible to without sending any notification Default: empty","title":"Config"},{"location":"services/opsgenie/config/#url_fields","text":"Host - The OpsGenie API host. Use 'api.eu.opsgenie.com' for EU instances Default: api.opsgenie.com URL part: opsgenie:// host :port/apikey Port - The OpsGenie API port. Default: 443 URL part: opsgenie://host: port /apikey APIKey - The OpsGenie API key ( Required ) URL part: opsgenie://host:port/ apikey","title":"URL Fields"},{"location":"services/opsgenie/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Actions - Custom actions that will be available for the alert Default: empty Alias - Client-defined identifier of the alert Default: empty Description - Description field of the alert Default: empty Details - Map of key-value pairs to use as custom properties of the alert Default: empty Entity - Entity field of the alert that is generally used to specify which domain the Source field of the alert Default: empty Note - Additional note that will be added while creating the alert Default: empty Priority - Priority level of the alert. Possible values are P1, P2, P3, P4 and P5 Default: empty Responders - Teams, users, escalations and schedules that the alert will be routed to send notifications Default: empty Source - Source field of the alert Default: empty Tags - Tags of the alert Default: empty Title - notification title, optionally set by the sender Default: empty User - Display name of the request owner Default: empty VisibleTo - Teams and users that the alert will become visible to without sending any notification Default: empty","title":"Query/Param Props"},{"location":"services/pushbullet/config/","text":"URL Fields \u00b6 Token ( Required ) URL part: pushbullet:// token /targets Targets ( Required ) URL part: pushbullet://token/ targets Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Title Default: Shoutrrr notification","title":"Config"},{"location":"services/pushbullet/config/#url_fields","text":"Token ( Required ) URL part: pushbullet:// token /targets Targets ( Required ) URL part: pushbullet://token/ targets","title":"URL Fields"},{"location":"services/pushbullet/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Title Default: Shoutrrr notification","title":"Query/Param Props"},{"location":"services/pushover/config/","text":"URL Fields \u00b6 Token - API Token/Key ( Required ) URL part: pushover://: token @user/ User - User Key ( Required ) URL part: pushover://:token@ user / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices Default: empty Priority Default: 0 Title Default: empty","title":"Config"},{"location":"services/pushover/config/#url_fields","text":"Token - API Token/Key ( Required ) URL part: pushover://: token @user/ User - User Key ( Required ) URL part: pushover://:token@ user /","title":"URL Fields"},{"location":"services/pushover/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Devices Default: empty Priority Default: 0 Title Default: empty","title":"Query/Param Props"},{"location":"services/rocketchat/config/","text":"URL Fields \u00b6 UserName Default: empty URL part: rocketchat:// username @host:port/tokena/tokenb/channel Host ( Required ) URL part: rocketchat://username@ host :port/tokena/tokenb/channel Port ( Required ) URL part: rocketchat://username@host: port /tokena/tokenb/channel TokenA ( Required ) URL part: rocketchat://username@host:port/ tokena /tokenb/channel TokenB ( Required ) URL part: rocketchat://username@host:port/tokena/ tokenb /channel Channel ( Required ) URL part: rocketchat://username@host:port/tokena/tokenb/ channel Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Config"},{"location":"services/rocketchat/config/#url_fields","text":"UserName Default: empty URL part: rocketchat:// username @host:port/tokena/tokenb/channel Host ( Required ) URL part: rocketchat://username@ host :port/tokena/tokenb/channel Port ( Required ) URL part: rocketchat://username@host: port /tokena/tokenb/channel TokenA ( Required ) URL part: rocketchat://username@host:port/ tokena /tokenb/channel TokenB ( Required ) URL part: rocketchat://username@host:port/tokena/ tokenb /channel Channel ( Required ) URL part: rocketchat://username@host:port/tokena/tokenb/ channel","title":"URL Fields"},{"location":"services/rocketchat/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc.","title":"Query/Param Props"},{"location":"services/slack/config/","text":"URL Fields \u00b6 Token - API Bot token ( Required ) URL part: slack:// token : token @channel/ Channel - Channel to send messages to in Cxxxxxxxxxx format ( Required ) URL part: slack://token:token@ channel / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. BotName - Bot name Default: empty Aliases: username Color - Message left-hand border color Default: empty Icon - Use emoji or URL as icon (based on presence of http(s):// prefix) Default: empty Aliases: icon_emoji , icon_url ThreadTS - ts value of the parent message (to send message as reply in thread) Default: empty Title - Prepended text above the message Default: empty","title":"Config"},{"location":"services/slack/config/#url_fields","text":"Token - API Bot token ( Required ) URL part: slack:// token : token @channel/ Channel - Channel to send messages to in Cxxxxxxxxxx format ( Required ) URL part: slack://token:token@ channel /","title":"URL Fields"},{"location":"services/slack/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. BotName - Bot name Default: empty Aliases: username Color - Message left-hand border color Default: empty Icon - Use emoji or URL as icon (based on presence of http(s):// prefix) Default: empty Aliases: icon_emoji , icon_url ThreadTS - ts value of the parent message (to send message as reply in thread) Default: empty Title - Prepended text above the message Default: empty","title":"Query/Param Props"},{"location":"services/smtp/config/","text":"URL Fields \u00b6 Username - SMTP server username Default: empty URL part: smtp:// username :password@host:port/ Password - SMTP server password or hash (for OAuth2) Default: empty URL part: smtp://username: password @host:port/ Host - SMTP server hostname or IP address ( Required ) URL part: smtp://username:password@ host :port/ Port - SMTP server port, common ones are 25, 465, 587 or 2525 Default: 25 URL part: smtp://username:password@host: port / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. FromAddress - E-mail address that the mail are sent from ( Required ) Aliases: from ToAddresses - List of recipient e-mails separated by \",\" (comma) ( Required ) Aliases: to Auth - SMTP authentication method Default: Unknown Possible values: None , Plain , CRAMMD5 , Unknown , OAuth2 Encryption - Encryption method Default: Auto Possible values: None , ExplicitTLS , ImplicitTLS , Auto FromName - Name of the sender Default: empty Subject - The subject of the sent mail Default: Shoutrrr Notification Aliases: title UseHTML - Whether the message being sent is in HTML Default: \u274c No UseStartTLS - Whether to use StartTLS encryption Default: \u2714 Yes","title":"Config"},{"location":"services/smtp/config/#url_fields","text":"Username - SMTP server username Default: empty URL part: smtp:// username :password@host:port/ Password - SMTP server password or hash (for OAuth2) Default: empty URL part: smtp://username: password @host:port/ Host - SMTP server hostname or IP address ( Required ) URL part: smtp://username:password@ host :port/ Port - SMTP server port, common ones are 25, 465, 587 or 2525 Default: 25 URL part: smtp://username:password@host: port /","title":"URL Fields"},{"location":"services/smtp/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. FromAddress - E-mail address that the mail are sent from ( Required ) Aliases: from ToAddresses - List of recipient e-mails separated by \",\" (comma) ( Required ) Aliases: to Auth - SMTP authentication method Default: Unknown Possible values: None , Plain , CRAMMD5 , Unknown , OAuth2 Encryption - Encryption method Default: Auto Possible values: None , ExplicitTLS , ImplicitTLS , Auto FromName - Name of the sender Default: empty Subject - The subject of the sent mail Default: Shoutrrr Notification Aliases: title UseHTML - Whether the message being sent is in HTML Default: \u274c No UseStartTLS - Whether to use StartTLS encryption Default: \u2714 Yes","title":"Query/Param Props"},{"location":"services/teams/config/","text":"URL Fields \u00b6 Group Default: empty URL part: teams:// group @tenant/altid/groupowner Tenant Default: empty URL part: teams://group@ tenant /altid/groupowner AltID Default: empty URL part: teams://group@tenant/ altid /groupowner GroupOwner Default: empty URL part: teams://group@tenant/altid/ groupowner Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Color Default: empty Host Default: outlook.office.com Title Default: empty","title":"Config"},{"location":"services/teams/config/#url_fields","text":"Group Default: empty URL part: teams:// group @tenant/altid/groupowner Tenant Default: empty URL part: teams://group@ tenant /altid/groupowner AltID Default: empty URL part: teams://group@tenant/ altid /groupowner GroupOwner Default: empty URL part: teams://group@tenant/altid/ groupowner","title":"URL Fields"},{"location":"services/teams/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Color Default: empty Host Default: outlook.office.com Title Default: empty","title":"Query/Param Props"},{"location":"services/telegram/config/","text":"URL Fields \u00b6 Token ( Required ) URL part: telegram:// token @telegram/ Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Chats ( Required ) Aliases: channels Notification - If disabled, sends Message silently Default: \u2714 Yes ParseMode - How the text Message should be parsed Default: None Possible values: None , Markdown , HTML , MarkdownV2 Preview - If disabled, no web page preview will be displayed for URLs Default: \u2714 Yes Title - Notification title, optionally set by the sender Default: empty","title":"Config"},{"location":"services/telegram/config/#url_fields","text":"Token ( Required ) URL part: telegram:// token @telegram/","title":"URL Fields"},{"location":"services/telegram/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Chats ( Required ) Aliases: channels Notification - If disabled, sends Message silently Default: \u2714 Yes ParseMode - How the text Message should be parsed Default: None Possible values: None , Markdown , HTML , MarkdownV2 Preview - If disabled, no web page preview will be displayed for URLs Default: \u2714 Yes Title - Notification title, optionally set by the sender Default: empty","title":"Query/Param Props"},{"location":"services/zulip/config/","text":"URL Fields \u00b6 BotMail - Bot e-mail address ( Required ) URL part: zulip:// botmail :botkey@host:port/ BotKey - API Key ( Required ) URL part: zulip://botmail: botkey @host:port/ Host - API server hostname ( Required ) URL part: zulip://botmail:botkey@ host : port / Query/Param Props \u00b6 Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Stream Default: empty Topic Default: empty Aliases: title","title":"Config"},{"location":"services/zulip/config/#url_fields","text":"BotMail - Bot e-mail address ( Required ) URL part: zulip:// botmail :botkey@host:port/ BotKey - API Key ( Required ) URL part: zulip://botmail: botkey @host:port/ Host - API server hostname ( Required ) URL part: zulip://botmail:botkey@ host : port /","title":"URL Fields"},{"location":"services/zulip/config/#queryparam_props","text":"Props can be either supplied using the params argument, or through the URL using ?key=value&key=value etc. Stream Default: empty Topic Default: empty Aliases: title","title":"Query/Param Props"}]}